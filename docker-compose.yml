services:
  postgres:
    image: ankane/pgvector
    container_name: rag_postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data/pgdata
      - ./db/migrations:/docker-entrypoint-initdb.d:ro
      - ./db/config/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - "5455:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: rag_backend
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - .:/app:delegated
      - ./entrypoint.sh:/entrypoint.sh:ro
    ports:
      - "3001:3001"
    depends_on:
      - postgres

  frontend:
    build:
      context: ./rag-frontend
      dockerfile: ../Dockerfile.frontend
    container_name: rag_frontend
    restart: unless-stopped
    env_file:
      - .env
    working_dir: /app
    volumes:
      - ./rag-frontend:/app:delegated
      - frontend_node_modules:/app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

volumes:
  postgres_data:
  frontend_node_modules: